(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{246:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"how-to-execute-an-upsert-with-postgresql"}},[t._v("How to execute an UPSERT with PostgreSQL")]),t._v(" "),a("p",[t._v("In cases where you do not want to handle unique constraint violation errors that are caused by duplicate entries, an UPSERT would be useful to have with PostgreSQL. An UPSERT is similar to an INSERT INTO ... IF NOT EXISTS.")]),t._v(" "),a("p",[t._v("In the following example, the "),a("code",[t._v("users")]),t._v(" table has a primary key "),a("code",[t._v("id")]),t._v(" and a "),a("code",[t._v("name")]),t._v(". By executing the following statement twice ...")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" users "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'fbdf0e604e'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'jonas.havers'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("... you will get a unique constraint violation error similar to this:")]),t._v(" "),a("p",[a("code",[t._v("Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint [...]")])]),t._v(" "),a("p",[t._v("The "),a("a",{attrs:{href:"https://www.postgresql.org/docs/9.5/static/sql-insert.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("PostgresSQL INSERT documentation"),a("OutboundLink")],1),t._v(" specifies an "),a("a",{attrs:{href:"https://www.postgresql.org/docs/9.5/static/sql-insert.html#SQL-ON-CONFLICT",target:"_blank",rel:"noopener noreferrer"}},[t._v("ON CONFLICT clause"),a("OutboundLink")],1),t._v(" as an alternative to raising a unique constraint or exclusion constraint violation error. There are two options from which you can choose:")]),t._v(" "),a("ul",[a("li",[t._v("ON CONFLICT DO NOTHING")]),t._v(" "),a("li",[t._v("ON CONFLICT DO UPDATE")])]),t._v(" "),a("p",[t._v("When you use one of them, you won't get the duplicate key error again:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" users "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'fbdf0e604e'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'jonas.havers'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" CONFLICT "),a("span",{attrs:{class:"token keyword"}},[t._v("DO")]),t._v(" NOTHING"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("ON CONFLICT DO")]),t._v(" is similar to an UPSERT in the sense that:")]),t._v(" "),a("ul",[a("li",[t._v("With "),a("code",[t._v("DO NOTHING")]),t._v(", no row will be inserted when there is a conflict with an existing row.")]),t._v(" "),a("li",[t._v("With "),a("code",[t._v("DO UPDATE")]),t._v(", you can specify the UPDATE statement that should be executed on the existing row that conflicts with the row proposed for insertion, e.g.")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" users "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'fbdf0e604e'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'jonas.havers'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" CONFLICT "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("DO")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" name"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v("'jonas_havers'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("If the attempt results in a constraint violation on the column “id”, the DO UPDATE operation will be executed.")])])},[],!1,null,null,null);s.default=e.exports}}]);
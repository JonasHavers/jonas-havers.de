(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{242:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"how-to-use-junit-5-with-gradle"}},[t._v("How to use JUnit 5 with Gradle")]),t._v(" "),a("p",[t._v("There are "),a("a",{attrs:{href:"https://junit.org/junit5/docs/current/user-guide/#running-tests-build-gradle",target:"_blank",rel:"noopener noreferrer"}},[t._v("several\nways"),a("OutboundLink")],1),t._v("\nto use JUnit 5 with Gradle.")]),t._v(" "),a("p",[t._v("One possibility is to use Gradle ≥ 4.6 which comes with "),a("a",{attrs:{href:"https://docs.gradle.org/current/userguide/java_plugin.html#using_junit5",target:"_blank",rel:"noopener noreferrer"}},[t._v("native support for the\nJUnit\nplatform"),a("OutboundLink")],1),t._v(".\nAdd the following code to your "),a("code",[t._v("build.gradle")]),t._v(" to use JUnit 5:")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[t._v("repositories "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("mavenCentral")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ndependencies "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    testImplementation "),a("span",{attrs:{class:"token string"}},[t._v("'org.junit.jupiter:junit-jupiter-api:5.5.1'")]),t._v("\n    testRuntimeOnly "),a("span",{attrs:{class:"token string"}},[t._v("'org.junit.jupiter:junit-jupiter-engine:5.5.1'")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ntest "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("useJUnitPlatform")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Since I wrote the first edition of this article, the declaration became even easier:")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[t._v("dependencies "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    testCompile "),a("span",{attrs:{class:"token string"}},[t._v("'org.junit.jupiter:junit-jupiter:5.5.1'")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"test-logging"}},[t._v("Test logging")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("java9.collections.MapTest "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" java9.collections.MapTest"),a("span",{attrs:{class:"token variable"}},[t._v("$Of")]),t._v(".shouldThrowAnExceptionWhenPassedNullValue"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" PASSED\n\njava9.collections.MapTest "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" java9.collections.MapTest"),a("span",{attrs:{class:"token variable"}},[t._v("$Of")]),t._v(".shouldCreateAMapOfTypeImmutableCollections"),a("span",{attrs:{class:"token variable"}},[t._v("$Map0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" PASSED\n")])])]),a("p",[t._v("To get a test logging similar to the above, add the following "),a("code",[t._v("testLogging")]),t._v(" to\nthe "),a("code",[t._v("test")]),t._v(" closure:")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[t._v("test "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    testLogging "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        events "),a("span",{attrs:{class:"token string"}},[t._v("'PASSED'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'FAILED'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'SKIPPED'")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("There are three additional "),a("code",[t._v("TestLogEvent")]),t._v("s: "),a("code",[t._v("STARTED")]),t._v(", "),a("code",[t._v("STANDARD_OUT")]),t._v(" and\n"),a("code",[t._v("STANDARD_ERROR")]),t._v(". To add the Standard-Out and Standard-Error streams, you can\nalso add "),a("code",[t._v("test.testLogging.showStandardStreams = true")]),t._v(".")]),t._v(" "),a("p",[t._v("Unfortunately, the "),a("code",[t._v("@DisplayName")]),t._v(" annotation is not supported yet for the Gradle\ntest task’s logging, but you will benefit from it when you execute the tests in\nIntelliJ for example.")]),t._v(" "),a("h2",{attrs:{id:"test-summary"}},[t._v("Test summary")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Test result: SUCCESS\nTest summary: 38 tests, 38 succeeded, 0 failed, 0 skipped\n")])])]),a("p",[t._v("To get a test summary like the above, add an "),a("code",[t._v("afterSuite")]),t._v(" to the "),a("code",[t._v("test")]),t._v(" closure:")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[t._v("test "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    afterSuite "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" desc"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result "),a("span",{attrs:{class:"token operator"}},[t._v("->")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("desc"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("parent"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            println "),a("span",{attrs:{class:"token string gstring"}},[t._v('"\\nTest result: '),a("span",{attrs:{class:"token expression"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("result"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("resultType"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n            println "),a("span",{attrs:{class:"token string gstring"}},[t._v('"Test summary: '),a("span",{attrs:{class:"token expression"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("result"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("testCount"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(' tests, "')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v("\n                    "),a("span",{attrs:{class:"token string gstring"}},[t._v('"'),a("span",{attrs:{class:"token expression"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("result"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("successfulTestCount"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(' succeeded, "')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v("\n                    "),a("span",{attrs:{class:"token string gstring"}},[t._v('"'),a("span",{attrs:{class:"token expression"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("result"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("failedTestCount"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(' failed, "')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v("\n                    "),a("span",{attrs:{class:"token string gstring"}},[t._v('"'),a("span",{attrs:{class:"token expression"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("$")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("result"),a("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("skippedTestCount"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(' skipped"')]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("I have published a "),a("a",{attrs:{href:"https://github.com/JonasHavers/javafeatures",target:"_blank",rel:"noopener noreferrer"}},[t._v("project on\nGitHub"),a("OutboundLink")],1),t._v(" that uses this\nconfiguration.")])])},[],!1,null,null,null);s.default=e.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{250:function(t,a,n){"use strict";n.r(a);var s=n(2),e=Object(s.a)({},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"getting-started-with-micronaut"}},[t._v("Getting started with Micronaut")]),t._v(" "),n("p",[n("a",{attrs:{href:"http://micronaut.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Micronaut"),n("OutboundLink")],1),t._v(" is a new JVM-based framework that is designed for building "),n("a",{attrs:{href:"https://12factor.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("twelve-factor"),n("OutboundLink")],1),t._v(" microservice applications.")]),t._v(" "),n("p",[t._v("The project was initiated by "),n("a",{attrs:{href:"https://objectcomputing.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("OCI"),n("OutboundLink")],1),t._v(" and the team that built the Grails framework, "),n("a",{attrs:{href:"https://www.youtube.com/watch?v=56j_f3OCg6E",target:"_blank",rel:"noopener noreferrer"}},[t._v("officially announced"),n("OutboundLink")],1),t._v(" by Graeme Rocher at Greach Conference 2018, and publicly "),n("a",{attrs:{href:"http://micronaut.io/announcement.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("open-sourced"),n("OutboundLink")],1),t._v(" under Apache License 2 on May 23rd, 2018. The first milestone release towards version 1.0.0 was released today, on May 30th, 2018. As the "),n("a",{attrs:{href:"http://docs.micronaut.io/latest/guide/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("official guide"),n("OutboundLink")],1),t._v(' states, "Micronaut is developed by the creators of the Grails framework and takes inspiration from lessons learnt over the years building real-world applications from monoliths to microservices using Spring, Spring Boot and Grails."')]),t._v(" "),n("p",[t._v("Micronaut's benefits include a fast startup time and low memory footprint that not only allow the development of serverless applications.")]),t._v(" "),n("blockquote",[n("p",[t._v("The low overhead is achieved by using a compile-time Dependency Injection (DI) and Aspect-Oriented Programming (AOP) API that does not use reflection. Reflection-based Inversion of Control (IoC) frameworks load and cache reflection data for every field, method and constructor. With Micronaut, your application startup time and memory consumption are not bound to the size of your codebase.")])]),t._v(" "),n("p",[t._v("Micronaut comes with a HTTP server and HTTP client. Micronaut's HTTP server makes it as easy as possible to expose APIs that can be consumed by HTTP clients. Non-blocking reactivity is supported with the use of "),n("a",{attrs:{href:"https://netty.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Netty"),n("OutboundLink")],1),t._v(". HTTP clients can be build declaratively with the use of annotations, which are implemented at compile-time, reducing memory consumption. The Grails' ORM framework "),n("a",{attrs:{href:"http://gorm.grails.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GORM"),n("OutboundLink")],1),t._v(" is officially supported which provides a rich set of APIs for accessing SQL databases like PostgreSQL with Hibernate as well as Neo4J, Redis, MongoDB, GraphQL and Cassandra databases.")]),t._v(" "),n("p",[t._v("Service discovery (Consul, Eureka), client side load balancing, circuit breaker, configuration sharing (Consul, AWS/GCP planned), distributed tracing tools (such as Zipkin), support for serverless computing with AWS Lambda are featured.")]),t._v(" "),n("p",[t._v("Over all, Micronaut offers a pretty similar programming model to Spring Boot and Grails.")]),t._v(" "),n("h2",{attrs:{id:"let-s-start"}},[t._v("Let's start")]),t._v(" "),n("p",[t._v("We can start with the "),n("a",{attrs:{href:"https://github.com/micronaut-projects/micronaut-examples",target:"_blank",rel:"noopener noreferrer"}},[t._v("official example projects on GitHub"),n("OutboundLink")],1),t._v(" to get a glimpse on how to develop with Micronaut. They run with Java 8 and the provided Gradle wrapper (or Gradle 4.7). "),n("em",[t._v("Note that the hello-world-kotlin sample does not currently use the same port as the others (i.e. port 8080), but a random port.")])]),t._v(" "),n("p",[t._v("For folks who are keen on building from source, snapshots of Micronaut are available "),n("a",{attrs:{href:"https://oss.sonatype.org/content/groups/public/io/micronaut/",target:"_blank",rel:"noopener noreferrer"}},[t._v("on Sonatype"),n("OutboundLink")],1),t._v(". Otherwise you can "),n("a",{attrs:{href:"http://micronaut.io/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("download"),n("OutboundLink")],1),t._v(" the pre-built "),n("a",{attrs:{href:"https://github.com/micronaut-projects/micronaut-core/releases/download/v1.0.0.M1/micronaut-1.0.0.M1.zip",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.0.0.M1 binary"),n("OutboundLink")],1),t._v(" from GitHub.")]),t._v(" "),n("p",[t._v("There is a Micronaut Command Line Interface (CLI) that we can use to setup projects on our own. The CLI zip of version 1.0.0-SNAPSHOT can also be found "),n("a",{attrs:{href:"https://oss.sonatype.org/content/groups/public/io/micronaut/cli/1.0.0-SNAPSHOT/",target:"_blank",rel:"noopener noreferrer"}},[t._v("at Sonatype"),n("OutboundLink")],1),t._v(".\nTo create a new project we can install the Micronaut Command Line Interface (CLI) with "),n("a",{attrs:{href:"http://sdkman.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("SDKman"),n("OutboundLink")],1),t._v(":")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ sdk "),n("span",{attrs:{class:"token function"}},[t._v("install")]),t._v(" micronaut\n")])])]),n("p",[t._v("Afterwards, we verify that Micronaut CLI was installed:")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ mn --version\n"),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Micronaut Version: 1.0.0.M1\n"),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" JVM Version: 1.8.0_172\n")])])]),n("p",[t._v("If you've got any errors with Java 9 or 10 so far, try to switch to the Java version that worked for me, i.e. Java 8 (1.8.0_172) (for example via "),n("code",[t._v("sdk install java 8.0.172-zulu")]),t._v(").")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ java -version\nopenjdk version "),n("span",{attrs:{class:"token string"}},[t._v('"1.8.0_172"')]),t._v("\nOpenJDK Runtime Environment "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Zulu 8.30.0.1-macosx"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("build 1.8.0_172-b01"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nOpenJDK 64-Bit Server VM "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Zulu 8.30.0.1-macosx"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("build 25.172-b01, mixed mode"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("To try out the Groovy samples or develop with Groovy, setup Groovy (with SDKman: "),n("code",[t._v("sdk install groovy")]),t._v(") and check if it's working:")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ groovy -version\nGroovy Version: 2.5.0 JVM: 1.8.0_172 Vendor: Azul Systems, Inc. OS: Mac OS X\n")])])]),n("p",[t._v("Afterwards, we can create a server application following "),n("a",{attrs:{href:"http://docs.micronaut.io/latest/guide/index.html#creatingServer",target:"_blank",rel:"noopener noreferrer"}},[t._v("the official documentation"),n("OutboundLink")],1),t._v(", or we start trying some commands out on our own:")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ mn create-app micronaut\n")])])]),n("p",[t._v("Note that we can use the interactive shell to create beans, clients, controllers and jobs from there on:")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ mn\n"),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Starting interactive mode"),n("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Enter a "),n("span",{attrs:{class:"token function"}},[t._v("command")]),t._v(" name to run. Use TAB "),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" completion:\nmn"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\ncreate-bean          create-client        create-controller    create-job           "),n("span",{attrs:{class:"token function"}},[t._v("help")]),t._v("\n")])])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("mn"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" create-controller -lang kotlin hello\n"),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Rendered template Controller.kt to destination src/main/kotlin/micronaut/HelloController.kt\n"),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Rendered template ControllerTest.java to destination src/test/java/micronaut/HelloControllerTest.java\n")])])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("mn"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" create-job -lang groovy hello\n"),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Rendered template Job.groovy to destination src/main/groovy/micronaut/HelloJob.groovy\n")])])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("mn"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" create-bean hello -lang groovy\n"),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Rendered template Bean.groovy to destination src/main/groovy/micronaut/Hello.groovy\n")])])]),n("p",[t._v("The CLI helps us with documentation for commands and their parameters:")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("mn"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("help")]),t._v(" create-job\n"),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Command: create-job\n"),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Description:\nCreates a job with scheduled method\n\n"),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Usage:\nmn create-job "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("JOB NAME"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Arguments:\n* Job Name - The name of the job class to create "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("REQUIRED"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Flags:\n* force - Whether to overwrite existing files\n* lang - The language used "),n("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the job "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options: groovy, kotlin, java"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("Ok, so far we played around with the CLI. We will continue by building our first application.")]),t._v(" "),n("h2",{attrs:{id:"building-our-own-hello-world-application"}},[t._v("Building our own Hello World application")]),t._v(" "),n("p",[t._v("Let's start by creating our project using the Micronaut CLI:")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ mn create-app helloworld\n")])])]),n("h3",{attrs:{id:"main-class"}},[t._v("Main class")]),t._v(" "),n("p",[t._v("The executable Java Main class is already available:")]),t._v(" "),n("p",[n("em",[n("code",[t._v("src/main/java/helloworld/Application.java")])])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" helloworld"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("micronaut"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("runtime"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Micronaut"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Application")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Micronaut"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("run")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Application"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("We can run the application either through this class if we use our preferred Java IDE (i.e. "),n("a",{attrs:{href:"https://www.jetbrains.com/idea/",target:"_blank",rel:"noopener noreferrer"}},[t._v("IDEA"),n("OutboundLink")],1),t._v(" 😉) or with "),n("code",[t._v("./gradlew run")]),t._v(" using the Gradle wrapper for development.")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("$ ./gradlew run\n\n"),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Task :run\n13:52:11.961 "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("main"),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" INFO  io.micronaut.runtime.Micronaut - Startup completed "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 1121ms. Server Running: http://localhost:47743\n")])])]),n("p",[t._v("For now, stop the server by pressing CTRL+C, because we haven't implemented any endpoint to talk to yet.")]),t._v(" "),n("p",[t._v("Note that the server starts at a random port by default without further configuration. We can change that by adding the server port configuration to our existing "),n("code",[t._v("src/main/resources/application.yml")]),t._v(":")]),t._v(" "),n("div",{staticClass:"language-yaml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{attrs:{class:"token key atrule"}},[t._v("micronaut")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{attrs:{class:"token key atrule"}},[t._v("application")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{attrs:{class:"token key atrule"}},[t._v("name")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" helloworld\n    "),n("span",{attrs:{class:"token key atrule"}},[t._v("server")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{attrs:{class:"token key atrule"}},[t._v("port")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("8888")]),t._v("\n")])])]),n("h3",{attrs:{id:"http-endpoint"}},[t._v("HTTP endpoint")]),t._v(" "),n("p",[t._v("Next, we create a controller that is responsible for the "),n("code",[t._v("/hello")]),t._v(" and subordinate paths:")]),t._v(" "),n("p",[n("em",[n("code",[t._v("src/test/java/helloworld/HelloController.java")])])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" helloworld"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("micronaut"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Controller"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("micronaut"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Get"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reactivex"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Single"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Controller")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"/hello"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("HelloController")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Get")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"/{name}"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" Single"),n("span",{attrs:{class:"token generics function"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("String"),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("hello")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String name"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Single"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("just")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Hello "')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" name "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("The controller accepts GET requests for "),n("code",[t._v("/hello/{name}")]),t._v(" where "),n("code",[t._v("{name}")]),t._v(' is the dynamic route parameter that is injected to our "hello" method which is annotated with the '),n("code",[t._v("@Get")]),t._v(" annoation. A GET request to "),n("code",[t._v("/hello/Jonas/")]),t._v(' will be served with the response "Hello Jonas!".')]),t._v(" "),n("p",[t._v("To test the endpoint, we can implement a HTTP client ("),n("code",[t._v("helloworld.HelloControllerClient")]),t._v(") class in the "),n("code",[t._v("src/test")]),t._v(" folder of our project now.")]),t._v(" "),n("h3",{attrs:{id:"a-reactive-java-http-client"}},[t._v("A reactive Java HTTP Client")]),t._v(" "),n("p",[n("em",[n("code",[t._v("src/test/java/helloworld/HelloControllerClient.java")])])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" helloworld"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("micronaut"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Get"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("micronaut"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Client"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reactivex"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Single"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" javax"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validation"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constraints"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NotBlank"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Client")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"/"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("HelloControllerClient")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Get")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"/hello/{name}"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Single"),n("span",{attrs:{class:"token generics function"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("String"),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("hello")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@NotBlank")]),t._v(" String name"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("The client is generated at compile time using this declarative approach.")]),t._v(" "),n("h3",{attrs:{id:"the-http-client-test"}},[t._v("The HTTP Client Test")]),t._v(" "),n("p",[t._v("We can test our hello world endpoint with this Java JUnit test:")]),t._v(" "),n("p",[n("em",[n("code",[t._v("src/test/java/helloworld/HelloControllerTest.java")])])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" helloworld"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("micronaut"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ApplicationContext"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("micronaut"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("runtime"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("server"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EmbeddedServer"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" org"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("After"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" org"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Before"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" org"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Test"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" org"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Assert"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEquals"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("HelloControllerTest")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" EmbeddedServer server"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" HelloControllerClient client"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Before")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("setup")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("server "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" ApplicationContext"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("run")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EmbeddedServer"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" server"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("getApplicationContext")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("getBean")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HelloControllerClient"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("shouldReturnHello")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        String response "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("hello")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"Jonas"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("blockingGet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("assertEquals")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Hello Jonas!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@After")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("cleanup")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("server"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("stop")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"the-executable-application"}},[t._v("The executable application")]),t._v(" "),n("p",[t._v("To run the application via an executable or to deploy the application, we create a runnable JAR file by running "),n("code",[t._v("./gradlew assemble")]),t._v(".")]),t._v(" "),n("p",[t._v("The JAR file is build to "),n("code",[t._v("build/libs")]),t._v(" and executed from the project's root folder with this command:")]),t._v(" "),n("p",[n("code",[t._v("java -jar build/libs/helloworld-0.1-all.jar")])]),t._v(" "),n("p",[t._v("As we configured above, the server will start and be available on localhost on port 8888 ("),n("a",{attrs:{href:"http://localhost:8888/hello/Jonas",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:8888/hello/Jonas"),n("OutboundLink")],1),t._v(").")]),t._v(" "),n("p",[t._v("The file size is 11.1 MB. The startup time is about 1 second.")]),t._v(" "),n("h3",{attrs:{id:"notes-on-testing"}},[t._v("Notes on testing")]),t._v(" "),n("h4",{attrs:{id:"using-the-generic-http-client"}},[t._v("Using the generic HTTP client")]),t._v(" "),n("p",[t._v("We do not have to implement our own declarative HTTP client for testing. We can use the default provided with Micronaut like this:")]),t._v(" "),n("p",[n("em",[n("code",[t._v("src/test/java/helloworld/HelloControllerAlternativeTest.java")])])]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" helloworld"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("micronaut"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ApplicationContext"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("micronaut"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HttpRequest"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("micronaut"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("http"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HttpClient"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("micronaut"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("runtime"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("server"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EmbeddedServer"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" org"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("After"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" org"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Before"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" org"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Test"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" java"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IOException"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" org"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Assert"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("assertEquals"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("HelloControllerAlternativeTest")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" EmbeddedServer server"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" HttpClient client"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Before")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("setup")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("server "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" ApplicationContext"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("run")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EmbeddedServer"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" HttpClient"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("create")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("server"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("getURL")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("shouldReturnHello")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        String response "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("toBlocking")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("retrieve")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HttpRequest"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("GET")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"/hello/Jonas"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token function"}},[t._v("assertEquals")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Hello Jonas!"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@After")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("cleanup")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" IOException "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("server"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("stop")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("this")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("close")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"using-the-spock-framework-for-testing"}},[t._v("Using the Spock framework for testing")]),t._v(" "),n("p",[t._v("To alternatively use the "),n("a",{attrs:{href:"http://spockframework.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spock framework"),n("OutboundLink")],1),t._v(", which is also my favorite testing framework, we apply the Gradle Groovy plugin and add the testCompile dependency to Spock in our Gradle build:")]),t._v(" "),n("p",[n("em",[n("code",[t._v("gradle.build")])])]),t._v(" "),n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[t._v("apply plugin"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string gstring"}},[t._v('"groovy"')]),t._v("\n\ndependencies "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    testCompile "),n("span",{attrs:{class:"token string gstring"}},[t._v('"org.spockframework:spock-core:1.1-groovy-2.4"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("Afterwards, we can implement our "),n("a",{attrs:{href:"http://spockframework.org/spock/docs/1.1/spock_primer.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Specification"),n("OutboundLink")],1),t._v(":")]),t._v(" "),n("p",[n("em",[n("code",[t._v("src/test/groovy/helloworld/HelloControllerSpec.groovy")])])]),t._v(" "),n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" helloworld\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("micronaut"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("context"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("ApplicationContext\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" io"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("micronaut"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("runtime"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("server"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("EmbeddedServer\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" spock"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("lang"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("AutoCleanup\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" spock"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("lang"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("Shared\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" spock"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("lang"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("Specification\n"),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" spock"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("lang"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("Unroll\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("HelloControllerSpec")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Specification")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Shared")]),t._v("\n    "),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@AutoCleanup")]),t._v("\n    EmbeddedServer embeddedServer "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v("\n            ApplicationContext"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("run")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EmbeddedServer"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Shared")]),t._v("\n    HelloControllerClient client "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" embeddedServer\n            "),n("span",{attrs:{class:"token operator"}},[t._v(".")]),t._v("applicationContext\n            "),n("span",{attrs:{class:"token operator"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("getBean")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HelloControllerClient"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{attrs:{class:"token annotation punctuation"}},[t._v("@Unroll")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{attrs:{class:"token string gstring"}},[t._v('"test hello #name response"')]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token spock-block"}},[t._v("expect:")]),t._v("\n        client"),n("span",{attrs:{class:"token operator"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("hello")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token operator"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("blockingGet")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'Hello Jonas!'")]),t._v("\n        "),n("span",{attrs:{class:"token spock-block"}},[t._v("where:")]),t._v("\n        name "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'Jonas'")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("Spock creates a HTML test report by default which we can view by opening the "),n("code",[t._v("build/reports/tests/test/index.html")]),t._v(" with a browser after we ran the tests with "),n("code",[t._v("./gradlew test")]),t._v(".")]),t._v(" "),n("h2",{attrs:{id:"what-s-next"}},[t._v("What's next")]),t._v(" "),n("p",[t._v("This is just the start. The full code example of our hello-world application is "),n("a",{attrs:{href:"https://github.com/JonasHavers/micronaut-helloworld/",target:"_blank",rel:"noopener noreferrer"}},[t._v("available at GitHub"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("p",[t._v("I recommend the talk "),n("a",{attrs:{href:"https://www.youtube.com/watch?v=HTUumoh7lWE",target:"_blank",rel:"noopener noreferrer"}},[t._v('"Launching the Micro Future: Groovy, Grails and Project Particle" by Graeme Rocher'),n("OutboundLink")],1),t._v(" which is available on YouTube. Graeme demonstrates a lot of the public examples and provides more details.")]),t._v(" "),n("p",[t._v("Álvaro Sánchez talked about "),n("a",{attrs:{href:"https://www.youtube.com/watch?v=o-DznSljvzI",target:"_blank",rel:"noopener noreferrer"}},[t._v('"Reactive microservices with Micronaut"'),n("OutboundLink")],1),t._v(" at Greach 2018.")]),t._v(" "),n("p",[t._v("There is an "),n("a",{attrs:{href:"http://docs.micronaut.io/snapshot/guide/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("official guide"),n("OutboundLink")],1),t._v(" and "),n("a",{attrs:{href:"http://docs.micronaut.io/snapshot/api/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("API reference"),n("OutboundLink")],1),t._v(" as well as some "),n("a",{attrs:{href:"http://guides.micronaut.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("official implementation guides"),n("OutboundLink")],1),t._v(" – as of writing primarily to different authentication mechanisms.")]),t._v(" "),n("p",[t._v("I am sure we will be provided with more information and see further progress after GR8Conf 2018, which is currently taking place. For example, there is a "),n("a",{attrs:{href:"https://alvarosanchez.github.io/micronaut-workshop/",target:"_blank",rel:"noopener noreferrer"}},[t._v("workshop"),n("OutboundLink")],1),t._v(" held by Álvaro Sánchez today.")]),t._v(" "),n("p",[t._v("Watch "),n("a",{attrs:{href:"https://twitter.com/search?q=%23micronautfw",target:"_blank",rel:"noopener noreferrer"}},[t._v("#micronautfw on Twitter"),n("OutboundLink")],1),t._v(" for more details. You can also "),n("a",{attrs:{href:"https://twitter.com/JonasHavers",target:"_blank",rel:"noopener noreferrer"}},[t._v("follow me there"),n("OutboundLink")],1),t._v(".")])])},[],!1,null,null,null);a.default=e.exports}}]);